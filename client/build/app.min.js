"user strict";angular.module("chatApp",["ngRoute"]).config(["$routeProvider",function(o){o.when("/login",{templateUrl:"src/login/login.html",controller:"LoginController"}).when("/roomlist/:user",{templateUrl:"src/roomlist/roomlist.html",controller:"RoomlistController"}).when("/room/:user/:room",{templateUrl:"src/room/room.html",controller:"RoomController"}).otherwise({redirectTo:"/login"})}]);
"use strict";angular.module("chatApp").controller("LoginController",["$scope","socket","$location","$rootScope","$routeParams",function(e,o,r,s,a){e.user="",e.errorMessage="",e.onLogin=function(){""===e.user?e.errorMessage="You have to choose a name before you continue!":o.emit("adduser",e.user,function(o,s){o?r.path("/roomlist/"+e.user):e.errorMessage="This username is already taken!"})}}]);
angular.module("chatApp").controller("RoomController",["$scope","socket","$location","$routeParams",function(o,e,s,r){o.message="",o.roomName=r.room,o.currUser=r.user,o.messageHistory=[],o.currUsers=[],e.emit("joinroom",{room:o.roomName}),e.on("updateusers",function(o,s,r){e.emit("users"),e.emit("rooms"),e.emit("getUserChannels")}),e.on("updatechat",function(e,s){e==o.roomName&&(o.messageHistory=s)}),o.sendmsg=function(){e.emit("sendmsg",{roomName:o.roomName,msg:o.message}),o.message=null},o.leaveRoom=function(){e.emit("partroom",o.roomName),s.path("/roomlist/"+o.currUser)},e.emit("users"),e.on("userlist",function(e){o.activeUsers=e})}]);
angular.module("chatApp").controller("RoomlistController",["$scope","socket","$location","$routeParams",function(o,r,e,m){o.errorMessage="",o.roomName="",o.currentUser=m.user,r.emit("rooms"),r.on("roomlist",function(r){o.roomlist=r}),o.newRoom=function(){""===o.roomName?o.errorMessage="You have to choose a room name before you continue!":r.emit("joinroom",{room:o.roomName})},o.moveToRoom=function(m){r.emit("joinroom",{room:m},function(r){r?e.path("/room/"+o.currentUser+"/"+m):o.errorMessage="Cannot join room"})}}]);
angular.module("chatApp").factory("socket",["$rootScope",function(n){var t=io.connect("http://localhost:8080");return{on:function(o,a){t.on(o,function(){var o=arguments;n.$apply(function(){a.apply(t,o)})})},emit:function(o,a,c){t.emit(o,a,function(){var o=arguments;n.$apply(function(){c&&c.apply(t,o)})})}}}]);